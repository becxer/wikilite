<% include header %>
<% include nav %>

  <script src="/codemirror/marked.js"></script>
  <script src="/codemirror/highlight.pack.js"></script>
  <script src="/codemirror/lib/codemirror.js"></script>
  <script src="/codemirror/overlay.js"></script>
  <script src="/codemirror/xml/xml.js"></script>
  <script src="/codemirror/markdown/markdown.js"></script>
  <script src="/codemirror/gfm/gfm.js"></script>
  <script src="/codemirror/javascript/javascript.js"></script>
  <script src="/codemirror/css/css.js"></script>
  <script src="/codemirror/htmlmixed/htmlmixed.js"></script>
  <script src="/codemirror/rawinflate.js"></script>

<main>
  <div class="section no-pad-bot">
    <form id="content" method="post" action="/edit/save?path=<%=path%>">

      <div class="row">
        <div class="input-field col s4">
          <input id="title" name="title" type="text" class="validate" value="<%=mds.title%>">
          <label for="name">제 목</label>
        </div>

        <div>
          <button class="btn waves-effect waves-light" type="submit" >Submit
            <i class="mdi-content-send right"></i>
          </button>
        </div>
      </div>


        <ul class="collapsible" data-collapsible="accordion">
          <li class="active">
            <div class="collapsible-header active"><i class="mdi-editor-mode-edit"></i>작성하기</div>
            <div id="in-body" class="collapsible-body">
              <textarea id="code" name="content" ><%-mds.content%></textarea>
            <div id="in"></div>
          </li>

          <li>
            <div class="collapsible-header"><i class="mdi-action-visibility"></i>미리보기</div>
            <div id="out" class="card card-content collapsible-body" style="margin-top:0"></div>
          </li>
        </ul>

    </form>
  </div>
        

  <script type="text/javascript">
    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;
    navigator.saveBlob = navigator.saveBlob || navigator.msSaveBlob || navigator.mozSaveBlob || navigator.webkitSaveBlob;
    window.saveAs = window.saveAs || window.webkitSaveAs || window.mozSaveAs || window.msSaveAs;

    // Because highlight.js is a bit awkward at times
    var languageOverrides = {
      js: 'javascript',
      html: 'xml'
    }

    marked.setOptions({
      highlight: function(code, lang){
        if(languageOverrides[lang]) lang = languageOverrides[lang];
        return hljs.listLanguages().indexOf(lang) !== -1 ? hljs.highlight(lang, code).value : code;
      }
    });

    function update(e){
      var val = e.getValue();

      setOutput(val);

      clearTimeout(hashto);
      hashto = setTimeout(updateHash, 1000);
    }

    function setOutput(val){
      val = val.replace(/<equation>((.*?\n)*?.*?)<\/equation>/ig, function(a, b){
        return '<img src="http://latex.codecogs.com/png.latex?' + encodeURIComponent(b) + '" />';
      });

      var out = document.getElementById('out');
      var old = out.cloneNode(true);
      out.innerHTML = marked(val);

      var allold = old.getElementsByTagName("*");
      if (allold === undefined) {
        return;
      }
      var allnew = out.getElementsByTagName("*");
      if (allnew === undefined) {
        return;
      }
      for (var i = 0, max = Math.min(allold.length, allnew.length); i < max; i++) {
        if (!allold[i].isEqualNode(allnew[i])) {
          out.scrollTop = allnew[i].offsetTop;
          return;
        }
      }
    }

    var editor = CodeMirror.fromTextArea(document.getElementById('code'), {
      mode: 'gfm',
      lineNumbers: false,
      matchBrackets: true,
      lineWrapping: true,
      theme: 'base16-light'
    });

    editor.on('change', update);

    document.addEventListener('drop', function(e){
      e.preventDefault();
      e.stopPropagation();

      var theFile = e.dataTransfer.files[0];
      var theReader = new FileReader();
      theReader.onload = function(e){
        editor.setValue(e.target.result);
      };

      theReader.readAsText(theFile);
    }, false);

    function saveAsMarkdown(){
      var code = editor.getValue();
      var blob = new Blob([code], { type: 'text/plain' });
      saveBlob(blob, "untitled.md");
    }

    document.getElementById('saveas-markdown').addEventListener('click', function() {
      saveAsMarkdown();
      hideMenu();
      return false;
    });

    function saveAsHtml() {
      var code = document.getElementById('out').innerHTML;
      var blob = new Blob([code], { type: 'text/plain' });
      saveBlob(blob, "untitled.html");
    }

    document.getElementById('saveas-html').addEventListener('click', function() {
      saveAsHtml();
      hideMenu();
      return false;
    });

    function saveBlob(blob, name){
      if(window.saveAs){
        window.saveAs(blob, name);
      }else if(navigator.saveBlob){
        navigator.saveBlob(blob, name);
      }else{
        url = URL.createObjectURL(blob);
        var link = document.createElement("a");
        link.setAttribute("href",url);
        link.setAttribute("download",name);
        var event = document.createEvent('MouseEvents');
        event.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);
        link.dispatchEvent(event);
      }
    }

    function showMenu() {
      document.getElementById('menu').style.display = 'block';
    }

    function hideMenu() {
      document.getElementById('menu').style.display = 'none';
    }
    hideMenu();

    document.addEventListener('keydown', function(e){
      if(e.keyCode == 83 && (e.ctrlKey || e.metaKey)){
        e.preventDefault();
        showMenu();
        return false;
      }
    })

    var hashto;

    function updateHash(){
      window.location.hash = btoa(RawDeflate.deflate(unescape(encodeURIComponent(editor.getValue()))))
    }

    if(window.location.hash){
      var h = window.location.hash.replace(/^#/, '');
      if(h.slice(0,5) == 'view:'){
        setOutput(decodeURIComponent(escape(RawDeflate.inflate(atob(h.slice(5))))));
        document.body.className = 'view';
      }else{
        editor.setValue(decodeURIComponent(escape(RawDeflate.inflate(atob(h)))))
        update(editor);
        editor.focus();
      }
    }else{
      update(editor);
      editor.focus();
    }
  </script>

  <script>
    $(document).ready(function(){
    $('.collapsible').collapsible({
      accordion : false // A setting that changes the collapsible behavior to expandable instead of the default accordion style
    });
  });
        
  </script>
</main>

<% include footer %>
